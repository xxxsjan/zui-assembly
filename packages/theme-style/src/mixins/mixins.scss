@use 'sass:selector';
@use 'config' as *;
@forward 'config';

@mixin b($block) {
  $B: $namespace + '-' + $block;

  .#{$B} {
    @content;
  }
}

@mixin g($block, $group) {
  $B: $namespace + '-' + $block + '-' + $group;

  .#{$B} {
    > .z-button {
      position: relative;
      float: left;
    }
    > .z-button:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    > .z-button:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    > .z-button:not(:last-child) {
      margin-right: -1px;
    }
    > .z-button:not(:first-child):not(:last-child) {
      border-radius: 0;
    }
    .z-button--primary:not(:first-child):not(:last-child) {
      border-right-color: hsl(0deg 0% 100% / 50%);
      border-left-color: hsl(0deg 0% 100% / 50%);
    }
    @content;
  }
}

@mixin whenFirst($child) {
  @at-root #{selector.unify(&, $child)} {
    @at-root &#{$first-child} {
      @content;
    }
  }
}

@mixin whenLast($child) {
  @at-root #{selector.unify(&, $child)} {
    @at-root &#{$last-child} {
      @content;
    }
  }
}

// .z-button.is-xx
@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}

@mixin whenD($child, $state) {
  @at-root #{selector.unify(&, $child)} {
    @at-root &.#{$state-prefix + $state} {
      @content;
    }
  }
}

// &--primary => .z-button--primary
@mixin m($modifier) {
  @at-root {
    #{& + $modifier-separator + $modifier} {
      @content;
    }
  }
}

// &__header  => .z-button__header
@mixin e($element) {
  @at-root {
    #{& + $element-separator + $element} {
      @content;
    }
  }
}

@mixin button-variant($color, $background-color, $border-color) {
  border-color: $border-color;
  color: $color;
  background: $background-color;
}

@mixin is-disabled($color, $background-color, $border-color) {
  border-color: $border-color;
  color: $color;
  background-color: $background-color;
}

@mixin is-circle() {
  padding: 12px;
  border-radius: 50%;
}

@mixin button-text($color) {
  padding-right: 0;
  padding-left: 0;
  border-color: transparent;
  color: $color;
  background: transparent;
}

@mixin button-center-color() {
  border-right-color: hsl(0deg 0% 100% / 50%);
  border-left-color: hsl(0deg 0% 100% / 50%);
}
